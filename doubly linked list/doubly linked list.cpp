#include <iostream>
#include "SinglyLinkedList.h"


int main()
{
	SinglyLinkedList<int> obj;
	std::cout << "Fill the list with two values:\n";

	try
	{
		obj.push_front(44);
		obj.push_by_index(22, 1);
		obj.show();

		std::cout << "Fill the list with two values:\n";
		obj.pop_by_index(0);
		
	}
	catch (const std::out_of_range& exept)
	{
		std::cout << exept.what() << "\n";
	}
}

//Задание 1
//Создайте шаблонный класс двусвязного списка для работы с целыми значениями.Требуется создать реализации для типичных операций над элементами :
//1.AddToHead – добавление элемента в голову.
//2.AddToTail – добавление элемента в хвост.
//3.DeleteFromHead – удаление элемента из головы.
//4.DeleteFromTail – удаление элемента из хвоста.
//5.DeleteAll – удаление всех элементов.
//6.Show – отображение всех элементов списка на экран.
//
//Задание 2
//Добавить в класс из задания 1 следующие функции : вставка элемента в заданную позицию, удаление элемента по заданной позиции,
//поиск заданного элемента(функция возвращает позицию найденного элемента в случае успеха или NULL в случае неудачи),
//поиск и замена заданного элемента(функция возвращает количество замененных элементов в случае успеха или - 1 в случае неудачи),
//переворот списка.

// ===========

//Задание 1
//Создайте шаблонный класс двусвязного списка для работы с целыми значениями.Требуется создать реализации для типичных операций над элементами :
//1.AddToHead – добавление элемента в голову.
//2.AddToTail – добавление элемента в хвост.
//3.DeleteFromHead – удаление элемента из головы.
//4.DeleteFromTail – удаление элемента из хвоста.
//5.DeleteAll – удаление всех элементов.
//6.Show – отображение всех элементов списка на экран.

// Задание 2
// Добавить в класс из задания 1 следующие функции :
// вставка элемента в заданную позицию
// удаление элемента по заданной позиции
// поиск заданного элемента (функция возвращает позицию найденного элемента в случае успеха или NULL в случае неудачи)
// поиск и замена заданного элемента(функция возвращает количество замененных элементов в случае успеха или - 1 в случае неудачи)
// переворот списка.